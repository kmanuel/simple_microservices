version: '3'
services:

  minio:
    image: minio/minio:RELEASE.2018-12-06T01-27-43Z
    ports:
      - "9000:9000"
    command: server /data
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure

  faktory:
    image: contribsys/faktory:0.9.1
    ports:
      - "7419:7419"
      - "7420:7420"
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure

  prometheus:
    image: prom/prometheus
    volumes:
      - ${PWD}/infrastructure/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure

  grafana:
    image: grafana/grafana
    volumes:
      - ${PWD}/infrastructure/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ${PWD}/infrastructure/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ${PWD}/infrastructure/grafana/dashboards:/var/lib/grafana/dashboards/
    ports:
      - "3000:3000"
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure

  gateway:
    build:
      context: service/gateway
    ports:
      - "8080:8080"
    depends_on:
      - "minio"
      - "faktory"
      - "prometheus"
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure

  crop:
    build:
      context: service/crop
    depends_on:
      - "minio"
      - "faktory"
      - "prometheus"
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure

  most_significant_image:
    build:
      context: service/most_significant_image
    depends_on:
      - "minio"
      - "faktory"
      - "prometheus"
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure

  optimization:
    build:
      context: service/optimization
    depends_on:
      - "minio"
      - "faktory"
      - "prometheus"
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure

  portrait:
    build:
      context: service/portrait
    depends_on:
      - "minio"
      - "faktory"
      - "prometheus"
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure

  screenshot:
    build:
      context: service/screenshot
    depends_on:
      - "minio"
      - "faktory"
      - "prometheus"
    env_file:
      - .env
    deploy:
      restart_policy:
        condition: on-failure
